//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PerfViewService.Models.Zip {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal Messages() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PerfViewService.Messages", typeof(Messages).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The argument must be non-negative..
        /// </summary>
        public static string ArgumentNeedNonNegative {
            get {
                return ResourceManager.GetString("ArgumentNeedNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to String cannot be empty..
        /// </summary>
        public static string CannotBeEmpty {
            get {
                return ResourceManager.GetString("CannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Central Directory corrupt..
        /// </summary>
        public static string CDCorrupt {
            get {
                return ResourceManager.GetString("CDCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Central Directory is invalid..
        /// </summary>
        public static string CentralDirectoryInvalid {
            get {
                return ResourceManager.GetString("CentralDirectoryInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create entries on an archive opened in read mode..
        /// </summary>
        public static string CreateInReadMode {
            get {
                return ResourceManager.GetString("CreateInReadMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot use create mode on a non-writeable stream..
        /// </summary>
        public static string CreateModeCapabilities {
            get {
                return ResourceManager.GetString("CreateModeCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Entries cannot be created while previously created entries are still open..
        /// </summary>
        public static string CreateModeCreateEntryWhileOpen {
            get {
                return ResourceManager.GetString("CreateModeCreateEntryWhileOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Entries in create mode may only be written to once, and only one entry may be held open at a time..
        /// </summary>
        public static string CreateModeWriteOnceAndOneEntryAtATime {
            get {
                return ResourceManager.GetString("CreateModeWriteOnceAndOneEntryAtATime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The DateTime in the Zip file is invalid..
        /// </summary>
        public static string DateTimeInvalid {
            get {
                return ResourceManager.GetString("DateTimeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The DateTimeOffset specified cannot be converted into a Zip file timestamp..
        /// </summary>
        public static string DateTimeOutOfRange {
            get {
                return ResourceManager.GetString("DateTimeOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot modify deleted entry..
        /// </summary>
        public static string DeletedEntry {
            get {
                return ResourceManager.GetString("DeletedEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Delete can only be used when the archive is in Update mode..
        /// </summary>
        public static string DeleteOnlyInUpdate {
            get {
                return ResourceManager.GetString("DeleteOnlyInUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot delete an entry currently open for writing..
        /// </summary>
        public static string DeleteOpenEntry {
            get {
                return ResourceManager.GetString("DeleteOpenEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Directory already exists..
        /// </summary>
        public static string DirAlreadyExists {
            get {
                return ResourceManager.GetString("DirAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Zip entry name ends in directory separator character but contains data..
        /// </summary>
        public static string DirectoryNameWithData {
            get {
                return ResourceManager.GetString("DirectoryNameWithData", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot access entries in Create mode..
        /// </summary>
        public static string EntriesInCreateMode {
            get {
                return ResourceManager.GetString("EntriesInCreateMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Entry names cannot require more than 2^16 bits..
        /// </summary>
        public static string EntryNamesTooLong {
            get {
                return ResourceManager.GetString("EntryNamesTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Entries larger than 4GB are not supported in Update mode..
        /// </summary>
        public static string EntryTooLarge {
            get {
                return ResourceManager.GetString("EntryTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to End of Central Directory record could not be found..
        /// </summary>
        public static string EOCDNotFound {
            get {
                return ResourceManager.GetString("EOCDNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Extracting Zip entry would have resulted in a file outside the specified destination directory..
        /// </summary>
        public static string ExtractingResultsInOutside {
            get {
                return ResourceManager.GetString("ExtractingResultsInOutside", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Compressed Size cannot be held in an Int64..
        /// </summary>
        public static string FieldTooBigCompressedSize {
            get {
                return ResourceManager.GetString("FieldTooBigCompressedSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Local Header Offset cannot be held in an Int64..
        /// </summary>
        public static string FieldTooBigLocalHeaderOffset {
            get {
                return ResourceManager.GetString("FieldTooBigLocalHeaderOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Number of Entries cannot be held in an Int64..
        /// </summary>
        public static string FieldTooBigNumEntries {
            get {
                return ResourceManager.GetString("FieldTooBigNumEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Offset to Central Directory cannot be held in an Int64..
        /// </summary>
        public static string FieldTooBigOffsetToCD {
            get {
                return ResourceManager.GetString("FieldTooBigOffsetToCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Offset to Zip64 End Of Central Directory record cannot be held in an Int64..
        /// </summary>
        public static string FieldTooBigOffsetToZip64EOCD {
            get {
                return ResourceManager.GetString("FieldTooBigOffsetToZip64EOCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Start Disk Number cannot be held in an Int64..
        /// </summary>
        public static string FieldTooBigStartDiskNumber {
            get {
                return ResourceManager.GetString("FieldTooBigStartDiskNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Uncompressed Size cannot be held in an Int64..
        /// </summary>
        public static string FieldTooBigUncompressedSize {
            get {
                return ResourceManager.GetString("FieldTooBigUncompressedSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot modify entry in Create mode after entry has been opened for writing..
        /// </summary>
        public static string FrozenAfterWrite {
            get {
                return ResourceManager.GetString("FrozenAfterWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A stream from ZipArchiveEntry has been disposed..
        /// </summary>
        public static string HiddenStreamName {
            get {
                return ResourceManager.GetString("HiddenStreamName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Length properties are unavailable once an entry has been opened for writing..
        /// </summary>
        public static string LengthAfterWrite {
            get {
                return ResourceManager.GetString("LengthAfterWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A local file header is corrupt..
        /// </summary>
        public static string LocalFileHeaderCorrupt {
            get {
                return ResourceManager.GetString("LocalFileHeaderCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Number of entries expected in End Of Central Directory does not correspond to number of entries in Central Directory..
        /// </summary>
        public static string NumEntriesWrong {
            get {
                return ResourceManager.GetString("NumEntriesWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The offset and length parameters are not valid for the array that was given..
        /// </summary>
        public static string OffsetLengthInvalid {
            get {
                return ResourceManager.GetString("OffsetLengthInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This stream from ZipArchiveEntry does not support reading..
        /// </summary>
        public static string ReadingNotSupported {
            get {
                return ResourceManager.GetString("ReadingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot use read mode on a non-readable stream..
        /// </summary>
        public static string ReadModeCapabilities {
            get {
                return ResourceManager.GetString("ReadModeCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot modify read-only archive..
        /// </summary>
        public static string ReadOnlyArchive {
            get {
                return ResourceManager.GetString("ReadOnlyArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This stream from ZipArchiveEntry does not support seeking..
        /// </summary>
        public static string SeekingNotSupported {
            get {
                return ResourceManager.GetString("SeekingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SetLength requires a stream that supports seeking and writing..
        /// </summary>
        public static string SetLengthRequiresSeekingAndWriting {
            get {
                return ResourceManager.GetString("SetLengthRequiresSeekingAndWriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Split or spanned archives are not supported..
        /// </summary>
        public static string SplitSpanned {
            get {
                return ResourceManager.GetString("SplitSpanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Zip file corrupt: unexpected end of stream reached..
        /// </summary>
        public static string UnexpectedEndOfStream {
            get {
                return ResourceManager.GetString("UnexpectedEndOfStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The archive entry was compressed using an unsupported compression method..
        /// </summary>
        public static string UnsupportedCompression {
            get {
                return ResourceManager.GetString("UnsupportedCompression", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Update mode requires a stream with read, write, and seek capabilities..
        /// </summary>
        public static string UpdateModeCapabilities {
            get {
                return ResourceManager.GetString("UpdateModeCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Entries cannot be opened multiple times in Update mode..
        /// </summary>
        public static string UpdateModeOneStream {
            get {
                return ResourceManager.GetString("UpdateModeOneStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This stream from ZipArchiveEntry does not support writing..
        /// </summary>
        public static string WritingNotSupported {
            get {
                return ResourceManager.GetString("WritingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Zip 64 End of Central Directory Record not where indicated..
        /// </summary>
        public static string Zip64EOCDNotWhereExpected {
            get {
                return ResourceManager.GetString("Zip64EOCDNotWhereExpected", resourceCulture);
            }
        }
    }
}
